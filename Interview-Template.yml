AWSTemplateFormatVersion: "2010-09-09"
Description: "This is a Interview Demo Template"
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access into the server
    Type: AWS::EC2::KeyPair::KeyName
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Type: AWS::EC2::Subnet::Id
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-1853ac65
    us-west-1:
      AMI: ami-bf5540df
    eu-west-1:
      AMI: ami-3bfab942
    ap-southeast-1:
      AMI: ami-e2adf99e
    ap-southeast-2:
      AMI: ami-43874721
Resources:
  Key:
    Type: 'AWS::KMS::Key'
    Properties:
      EnableKeyRotation: True
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
         - Effect: Allow
           Principal :
             AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
           Action:
           - 'kms:Create'
           - 'kms:Encrypt'
           Resource: 'SMS'
         - Effect: Allow
           AWS: '*'
  SMS:        
    Type: AWS::SecretsManager::Secret
    Properties: 
      KmsKeyId: 
        !GetAtt Key.KeyId
      GenerateSecretString: GenerateSecretString  
  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action :
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root 
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  IAMInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref IAMRole   
  Ec2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - AMI
      SecurityGroups: 
        - !Ref MySecurityGroup
      KeyName: !Ref KeyName
  MySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable Https and SSH access only
      SecurityGroupIngress:
        - IpProtocol: https,ssh
          FromPort: 80,22
          ToPort: 80,22
          SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIP: 0.0.0.0/0
      UserData:
         Fn::Base64: !Sub |
            ACCESS_KEY=${AccessKey}
          SECRET_KEY=${SecretKey}